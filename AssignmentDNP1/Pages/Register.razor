@page "/Register"
@using AssignmentDNP1.Authentication
@using AssignmentDNP1.Services
@inject IAuthService authService
@inject IUserService userService
@inject NavigationManager navMgr
<h3>Register</h3>
<AuthorizeView>
    <NotAuthorized>
        <div class="card">
            <h3>Please register</h3>
            <div class="field">
                <label>User name:</label>
                <input type="text" @bind="userName"/>
            </div>
            <div class="field">
                <label style="text-align: center">Password:</label>
                <input type="password" @bind="password"/>
            </div>
            <div class="field">
                            <label style="text-align: center">Confirm Password:</label>
                            <input type="password" @bind="confirmPassword"/>
                        </div>
            @if (!string.IsNullOrEmpty(errorLabel))
            {
                <div class="field">
                    <label style="color: red">
                        @errorLabel
                    </label>
                </div>
            }
            <div class="field">
                <button class="loginbtn" @onclick="RegisterAsync">Register</button>
            </div>
        </div>
    </NotAuthorized>
    <Authorized>
        <div class="card">
            <h3>Hello, @context.User.Identity.Name</h3>
        </div>
    </Authorized>
</AuthorizeView>

@code {
    
    private string userName="" ;
    private string password="" ;
    private string confirmPassword="" ;
    private string errorLabel;
    
    private async Task RegisterAsync()
    {
        errorLabel = "";
        //userService = new InMemoryUserService();
        try
        {
          //  await userService(userName, password);
            if (userName.Length == 0 || password.Length == 0)
            {
                errorLabel = "empty userName or password";
            }
            else
            {
                if (confirmPassword != password)
                {
                    errorLabel = "passwords does not match";
                }
                else
                {
                    await authService.AddUser(userName, password);
                    navMgr.NavigateTo("/");
                }
            }
            
            
        }
        catch (Exception e)
        {
            errorLabel = $"Error: {e.Message}";
        }
    }
}